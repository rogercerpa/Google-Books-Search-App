{"version":3,"sources":["components/navbar/index.js","utils/API.js","components/searchBar/index.js","pages/search.js","pages/saved.js","components/jumbotron/index.js","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","DenseAppBar","classes","className","AppBar","position","Toolbar","variant","Typography","color","Button","href","axios","get","id","delete","bookData","post","SearchBar","props","Form","inline","FormGroup","Label","for","Input","type","placeholder","paper","padding","textAlign","palette","text","secondary","Books","useState","books","setBooks","useEffect","API","then","res","data","catch","err","console","log","Grid","container","item","xs","Paper","length","map","book","Card","CardBody","key","_id","CardTitle","title","CardSubtitle","author","CardText","synopsis","onClick","favBook","favoriteBook","FullWidthGrid","savedBooks","AppTitle","Jumbotron","fluid","Container","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3f939c53.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot       : {\r\n\t\tflexGrow : 1\r\n\t},\r\n\tmenuButton : {\r\n\t\tmarginRight : theme.spacing(2)\r\n\t}\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar variant=\"dense\">\r\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t\t<h2>Google Books</h2>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t<a href=\"/search\">Search Books</a>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t\t<a href=\"/saved\">Books Saved</a>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n\t// Gets all books\r\n\tgetBooks   : function() {\r\n\t\treturn axios.get('/api/books');\r\n\t},\r\n\t// Gets the book with the given id\r\n\tgetBook    : function(id) {\r\n\t\treturn axios.get('/api/books/' + id);\r\n\t},\r\n\t// Deletes the book with the given id\r\n\tdeleteBook : function(id) {\r\n\t\treturn axios.delete('/api/books/' + id);\r\n\t},\r\n\t// Saves a book to the database\r\n\tsaveBook   : function(bookData) {\r\n\t\treturn axios.post('/api/books/', bookData);\r\n\t}\r\n};\r\n","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst SearchBar = (props) => {\r\n\treturn (\r\n\t\t<Form inline>\r\n\t\t\t<FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n\t\t\t\t<Label for=\"exampleEmail\" className=\"mr-sm-2\">\r\n\t\t\t\t\tBook name\r\n\t\t\t\t</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"exampleEmail\"\r\n\t\t\t\t\tplaceholder=\"Think and grow rich\"\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<Button>Search</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n\tCard,\r\n\tCardText,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tCardSubtitle,\r\n\tButton\r\n} from 'reactstrap';\r\nimport API from '../utils/API';\r\nimport SearchBar from '../components/searchBar/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot  : {\r\n\t\tflexGrow : 1\r\n\t},\r\n\tpaper : {\r\n\t\tpadding   : theme.spacing(2),\r\n\t\ttextAlign : 'center',\r\n\t\tcolor     : theme.palette.text.secondary\r\n\t}\r\n}));\r\n\r\nexport default function Books() {\r\n\tconst classes = useStyles();\r\n\tconst [ books, setBooks ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tloadBooks();\r\n\t}, []);\r\n\r\n\tfunction loadBooks() {\r\n\t\tAPI.getBooks()\r\n\t\t\t.then((res) => setBooks(res.data))\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}\r\n\tconsole.log(books);\r\n\r\n\tfunction favoriteBook(id) {\r\n\t\tconst favBook = books[id];\r\n\t\tAPI.saveBook(favBook)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<SearchBar />\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t{books.length ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{books.map((book) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardBody key={book._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardTitle>{book.title}</CardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardSubtitle>{book.author}</CardSubtitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardText>{book.synopsis}</CardText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => favoriteBook(book._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd to favorites\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h3>No Results to Display</h3>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n\tCard,\r\n\tCardText,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tCardSubtitle,\r\n\tButton\r\n} from 'reactstrap';\r\nimport API from '../utils/API';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot  : {\r\n\t\tflexGrow : 1\r\n\t},\r\n\tpaper : {\r\n\t\tpadding   : theme.spacing(2),\r\n\t\ttextAlign : 'center',\r\n\t\tcolor     : theme.palette.text.secondary\r\n\t}\r\n}));\r\n\r\nexport default function FullWidthGrid() {\r\n\tconst classes = useStyles();\r\n\tconst [ books, setBooks ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsavedBooks();\r\n\t}, []);\r\n\r\n\tfunction savedBooks() {\r\n\t\tAPI.getBooks()\r\n\t\t\t.then((res) => setBooks(res.data))\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}\r\n\r\n\tfunction deleteBook(id) {\r\n\t\tAPI.deleteBook(id)\r\n\t\t\t.then((res) => savedBooks())\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t{books.length ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{books.map((book) => (\r\n\t\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t\t<CardBody key={book._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardTitle>{book.title}</CardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardSubtitle>{book.author}</CardSubtitle>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardText>{book.synopsis}</CardText>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => deleteBook(book._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tdelete from favorites\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h3>No Results to Display</h3>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\n\r\nconst AppTitle = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Jumbotron fluid>\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<h1 className=\"display-3\">Google Books Search</h1>\r\n\t\t\t\t\t<p className=\"lead\">Search for and Save Books of Interest</p>\r\n\t\t\t\t</Container>\r\n\t\t\t</Jumbotron>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AppTitle;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/navbar/index';\r\nimport Search from './pages/search';\r\nimport Saved from './pages/saved';\r\nimport Jumbotron from './components/jumbotron/index';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<Jumbotron />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path={[ '/search' ]}>\r\n\t\t\t\t\t\t<Search />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path={[ '/saved' ]}>\r\n\t\t\t\t\t\t<Saved />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}